install.packages("RPostgreSQL")
require(RPostgreSQL)
# baza
pw <- { "System32" }
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "postgres", host = "localhost", port = 5432, user = "majster", password = pw)
con <- dbConnect(drv, dbname = "broker_development", host = "localhost", port = 5432, user = "majster", password = pw)
con <- dbConnect(drv, dbname = "broker_development", host = "localhost", port = 5432, user = "majster", password = pw)
pw
# baza
pw <- "System32"
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "broker_development", host = "localhost", port = 5432, user = "majster", password = pw)
con <- dbConnect(drv, dbname = "broker_development")
require(RPostgreSQL)
# baza
pw <- "System32"
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "broker_development", host = "localhost", port = 5432)
con <- dbConnect(drv, dbname = "broker_development")
install.packages("Quandl("BCB/UDJIAD1")")
install.packages("Quandl")
library(RPostgreSQL)
library(Quandl)
# baza
con <- dbConnect(dbDriver("PostgreSQL"), dbname = "broker_development")
dbDisconnect(con)
dbUnloadDriver(drv)
# baza
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "broker_development")
dbDisconnect(con)
dbUnloadDriver(drv)
dbDisconnect(con)
source('~/Dokumenty/broker/lib/tasks/forecast.R')
# print(sprintf("Forecast for day next to: %s", as.character(tail(dji.prices$Date, n=1))))
# print(sprintf("Arima: %s", as.character(dji.arima.f$mean[1])))
# print(sprintf("Neural Network: %s", as.character(dji.nnet.f$mean[1])))
# plot(dji.arima.f)
#
dbdisc <- dbDisconnect(con)
# print(sprintf("Forecast for day next to: %s", as.character(tail(dji.prices$Date, n=1))))
# print(sprintf("Arima: %s", as.character(dji.arima.f$mean[1])))
# print(sprintf("Neural Network: %s", as.character(dji.nnet.f$mean[1])))
# plot(dji.arima.f)
#
dbdisc <- dbDisconnect(con)
source('~/Dokumenty/broker/lib/tasks/nlp.R')
mwatch.sent$PositivityGI
mean(cnbc.sent$PositivityGI)
mean(cnbc.sent$NegativityGI)
cnbc.sent$PositivityGI
cnbc.corpus
cnbc.abstracts
cnbc.heads
cnbc.links
for(i in 1:length(cnbc.links[,1])){
cnbc.news <- read_html(cnbc.links[i,])
cnbc.abstracts <- c(cnbc.abstracts, html_text(html_nodes(cnbc.news, "div.story-top div#article_deck span")))
}
cnbc.abstracts
cnbc.news <- read_html(https://www.cnbc.com/2018/01/24/stock-market-off-to-best-start-in-31-years-bodes-well-for-2018.html)
cnbc.news <- read_html("https://www.cnbc.com/2018/01/24/stock-market-off-to-best-start-in-31-years-bodes-well-for-2018.html")
cnbc.news
cnbc.abstracts <- c(cnbc.abstracts, html_text(html_nodes(cnbc.news, "div.story-top div#article_deck span")))
cnbc.abstracts
cnbc.sent
source('~/Dokumenty/broker/lib/tasks/nlp.R')
analyzeSentiment("The Dow, S&P 500 and Nasdaq all hit record highs")
cnbc.html <- read_html("https://www.cnbc.com/2018/01/24/us-stocks-dow-record-earnings.html")
cnbc.abstracts <- c(cnbc.abstracts, html_text(html_nodes(cnbc.news, "div.story-top div#article_deck span")))
cnbc.abstracts
html_text(html_nodes(cnbc.news, "div.story-top div#article_deck span")
)
html_text(html_nodes(cnbc.news, "div.story-top div#article_deck span"))
html_text(html_nodes(cnbc.news, "div.story-top"))
html_text(html_nodes(cnbc.news, "div.story-top div#article_deck"))
html_text(html_nodes(cnbc.news, "div.story-top div.story-header-left twoCol"))
html_text(html_nodes(cnbc.news, "div.story-top div.story-header-left"))
html_text(html_nodes(cnbc.news, "div.story-top div.story-header-left div#article_deck"))
html_text(html_nodes(cnbc.news, "div.story-top div.story-header-left li"))
html_text(html_nodes(cnbc.news, "div.story-top li"))
html_text(html_nodes(cnbc.news, "div.story-top"))
html_text(html_nodes(cnbc.news, "div#article_deck "))
html_text(html_nodes(cnbc.news, "div.story-top div#article_deck"))
html_text(html_nodes(cnbc.news, "div.story-top div.article_deck"))
html_text(html_nodes(cnbc.news, "div.story-top div#article_deck"))
html_text(html_nodes(cnbc.news, "div.story-top"))
lol <- html_text(html_nodes(cnbc.news, "div.story-top"))
lol
Show(lol)
print(lol)
html_text(html_nodes(cnbc.news, "div.story-top"))
cnbc.news <- read_html("https://www.cnbc.com/2018/01/24/us-stocks-dow-record-earnings.html")
lol <- html_text(html_nodes(cnbc.news, "div.story-top"))
html_text(html_nodes(cnbc.news, "div.story-top"))
html_text(html_nodes(cnbc.news, "div.story-top div#article_deck"))
html_text(html_nodes(cnbc.news, "div.story-top div#article_deck li"))
source('~/Dokumenty/broker/lib/tasks/nlp.R')
cnbc.sent
source('~/Dokumenty/broker/lib/tasks/nlp.R')
