install.packages("RPostgreSQL")
require(RPostgreSQL)
# baza
pw <- { "System32" }
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "postgres", host = "localhost", port = 5432, user = "majster", password = pw)
con <- dbConnect(drv, dbname = "broker_development", host = "localhost", port = 5432, user = "majster", password = pw)
con <- dbConnect(drv, dbname = "broker_development", host = "localhost", port = 5432, user = "majster", password = pw)
pw
# baza
pw <- "System32"
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "broker_development", host = "localhost", port = 5432, user = "majster", password = pw)
con <- dbConnect(drv, dbname = "broker_development")
require(RPostgreSQL)
# baza
pw <- "System32"
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "broker_development", host = "localhost", port = 5432)
con <- dbConnect(drv, dbname = "broker_development")
install.packages("Quandl("BCB/UDJIAD1")")
install.packages("Quandl")
library(RPostgreSQL)
library(Quandl)
# baza
con <- dbConnect(dbDriver("PostgreSQL"), dbname = "broker_development")
dbDisconnect(con)
dbUnloadDriver(drv)
# baza
drv <- dbDriver("PostgreSQL")
con <- dbConnect(drv, dbname = "broker_development")
dbDisconnect(con)
dbUnloadDriver(drv)
dbDisconnect(con)
source('~/Dokumenty/broker/lib/tasks/forecast.R')
# print(sprintf("Forecast for day next to: %s", as.character(tail(dji.prices$Date, n=1))))
# print(sprintf("Arima: %s", as.character(dji.arima.f$mean[1])))
# print(sprintf("Neural Network: %s", as.character(dji.nnet.f$mean[1])))
# plot(dji.arima.f)
#
dbdisc <- dbDisconnect(con)
# print(sprintf("Forecast for day next to: %s", as.character(tail(dji.prices$Date, n=1))))
# print(sprintf("Arima: %s", as.character(dji.arima.f$mean[1])))
# print(sprintf("Neural Network: %s", as.character(dji.nnet.f$mean[1])))
# plot(dji.arima.f)
#
dbdisc <- dbDisconnect(con)
